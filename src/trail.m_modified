hold off

figure(1);
xdl=33;
yd1=33;

for i=1:1:n
	
	if (i<=40)
		S2(i).E=Eo*(1+a);
		S2(i).ENERGY=1;
		S2(i).type='A';
		if (i<=5)     %   z2 - 1
			S2(i).xd=rand(1,1)*xdl;
			S2(i).yd=rand(1,1)*yd1;
        elseif (i>5 &&  i<=10)  %   z1 - 1
			S2(i).xd=33 + rand(1,1)*xdl;
			S2(i).yd=rand(1,1)*yd1;
        elseif (i>10 &&  i<=15)   %  z2 - 2
			S2(i).xd=rand(1,1)*xdl;
			S2(i).yd=66 + rand(1,1)*yd1;
        elseif (i>15 &&  i<=20)    % z1 - 2
			S2(i).xd=rand(1,1)*xdl;
			S2(i).yd=33 + rand(1,1)*yd1;
        elseif (i>20 &&  i<=25)    % z1 - 3
			S2(i).xd=66 + rand(1,1)*xdl;
			S2(i).yd=33 + rand(1,1)*yd1;
        elseif (i>25 &&  i<=30)   %  z2 - 3
			S2(i).xd=66 + rand(1,1)*xdl;
			S2(i).yd=rand(1,1)*yd1;
        elseif (i>30 &&  i<=35)    % z1 - 4
			S2(i).xd=33 + rand(1,1)*xdl;
			S2(i).yd=66 + rand(1,1)*yd1;
        else    % z2 - 4
			S2(i).xd=66 + rand(1,1)*xdl;
			S2(i).yd=66 + rand(1,1)*yd1;
        
		end
		plot(S2(i).xd,S2(i).yd,'og');
        hold on
	else
		S2(i).xd=33 + rand(1,1)*xdl;
		S2(i).yd=33 + rand(1,1)*yd1;
        S2(i).E=Eo;
        S2(i).ENERGY=0;
        S2(i).type='N';
        plot(S2(i).xd,S2(i).yd,'ob');
        hold on
    end
end

 

S2(n+1).xd=sink.x;
S2(n+1).yd=sink.y;
plot(S2(n+1).xd,S2(n+1).yd,'green x');

figure(1);
hold off

flag_first_dead2=0;
allive2=n;

countCHs2=0;
cluster2=1;
%counter for bit transmitted to Bases Station and to Cluster Heads

packets_TO_BS2=0;
packets_TO_CH2=0;


for r=0:1:rmax
%    r
    %Election Probability for Advanced Nodes
    padv= ( p*(1+a)/(1+(a*m)) );
    
    %Operations for sub-epochs
    if(mod(r, round(1/padv) )==0)
        for i=1:1:n
            if(S2(i).ENERGY==1)
                S2(i).G=0;
                %S2(i).cl=0;
            end
            
        end
    end
        
    dead2=0;

	
	clusterflag=0;
	
	maxEnergy=0;
	%j=1;
	
    for i=1:1:5     %   z2 - 1
        %checking if there is a dead node
        if (S2(i).E<=0)
            
            dead2=dead2+1;
     
        else
			
			if(S2(i).E > maxEnergy)
			    maxEnergy=S2(i).E;
				CH(1)=i;
				%packets_TO_BS2=packets_TO_BS2+1;
			end
        end
        %j=j+1;
    end
	
	maxEnergy=0;
	
	for i=6:1:10			 %   z1 - 1
        %checking if there is a dead node
        if (S2(i).E<=0)
           
            dead2=dead2+1;

        else
			
			if(S2(i).E>maxEnergy)
			    maxEnergy=S2(i).E;
				CH(2)=i;
                %packets_TO_BS2=packets_TO_BS2+1;
			end
        end
        %j=j+1;
    end
	
	maxEnergy=0;
	
	for i=11:1:15     %  z2 - 2
        %checking if there is a dead node
        if (S2(i).E<=0)
         
            dead2=dead2+1;
    
        else
			
			if(S2(i).E>maxEnergy)
			    maxEnergy=S2(i).E;
				CH(3)=i;
				%packets_TO_BS2=packets_TO_BS2+1;
			end
        end
        %j=j+1;
               
    end
	
	maxEnergy=0;
	
	for i=16:1:20     %  z1 - 2
        %checking if there is a dead node
        if (S2(i).E<=0)
         
            dead2=dead2+1;
    
        else
			
			if(S2(i).E>maxEnergy)
			    maxEnergy=S2(i).E;
				CH(4)=i;
				%packets_TO_BS2=packets_TO_BS2+1;
            end
        end
        
        %j=j+1;       
    end
	
	maxEnergy=0;
	
	for i=21:1:25     %  z1 - 3
        %checking if there is a dead node
        if (S2(i).E<=0)
         
            dead2=dead2+1;
    
        else
			
			if(S2(i).E>maxEnergy)
			    maxEnergy=S2(i).E;
				CH(5)=i;
                %packets_TO_BS2=packets_TO_BS2+1;
			end
        end
        %j=j+1;
    end
	
	maxEnergy=0;
	
	for i=26:1:30     %  z2 - 3
        %checking if there is a dead node
        if (S2(i).E<=0)
         
            dead2=dead2+1;
    
        else
			
			if(S2(i).E>maxEnergy)
			    maxEnergy=S2(i).E;
				CH(6)=i;
                %packets_TO_BS2=packets_TO_BS2+1;
			end
        end
        %j=j+1;
    end
	
	maxEnergy=0;
	
	for i=31:1:35     %  z1 - 4
        %checking if there is a dead node
        if (S2(i).E<=0)
         
            dead2=dead2+1;
    
        else
			
			if(S2(i).E>maxEnergy)
			    maxEnergy=S2(i).E;
				CH(7)=i;
				%packets_TO_BS2=packets_TO_BS2+1;
			end
        end
        %j=j+1;
    end
	
	maxEnergy=0;
	
	for i=36:1:40     %  z2 - 4
        %checking if there is a dead node
        if (S2(i).E<=0)
         
            dead2=dead2+1;
    
        else
			
			if(S2(i).E > maxEnergy)
			    maxEnergy=S2(i).E;
				CH(8)=i;
				%packets_TO_BS2=packets_TO_BS2+1;
			end
        end
        
    end
    
    for i=1:1:8
	   
	    countCHs2=countCHs2+1;
                                       					
		S2(CH(i)).type='C';
        S2(CH(i)).G=(1/padv)-1;
		C(cluster2).xd=S2(CH(i)).xd;
		C(cluster2).yd=S2(CH(i)).yd;
                        
        %plot(S2(CH(i)).xd,S2(CH(i)).yd,'k*');
        %hold on
                        
        distance=sqrt( (S2(CH(i)).xd-(S2(n+1).xd) )^2 + (S2(CH(i)).yd-(S2(n+1).yd) )^2 );
		C(cluster2).distance=distance;
		C(cluster2).id=i;
		X(cluster2)=S2(CH(i)).xd;
		Y(cluster2)=S2(CH(i)).yd;
		cluster2=cluster2+1;
                        
		%Calculation of Energy dissipated distance;
                    
		packets_TO_BS2=packets_TO_BS2+1;
		if (distance>do)
            S2(CH(i)).E=S2(i).E- ( (ETX+ERX+EDA)*(4000) + Emp*4000*( distance*distance*distance*distance ));
		end
        if (distance<=do)
			S2(CH(i)).E=S2(i).E- ( (ETX+ERX+EDA)*(4000)  + Efs*4000*( distance * distance ));
        end
        
        %if(S2(CH(i)).type=='C')
		S2(CH(i)).type='A';
        %end
		
    end
	
	for i=41:1:n
        %checking if there is a dead node
        if (S2(i).E<=0)
   %         plot(S2(i).xd,S2(i).yd,'red .');
            
            dead2=dead2+1;
     %       hold on;
        else
			if(S2(i).type=='N')
                distance=sqrt( (S2(i).xd-(S2(n+1).xd) )^2 + (S2(i).yd-(S2(n+1).yd) )^2 );
                if (distance>do)
                    S2(i).E=S2(i).E- ( (ETX)*(4000) + Emp*4000*( distance*distance*distance*distance ));
                end
                if (distance<=do)
                    S2(i).E=S2(i).E- ( (ETX)*(4000)  + Efs*4000*( distance * distance ));
                end
                packets_TO_BS2=packets_TO_BS2+1;
			end
        end
        
        
    %    plot(S2(n+1).xd,S2(n+1).yd,'green x')
    end
	
	
	hold off
	STATISTICS4.DEAD2(r+1)=dead2;
    STATISTICS4.ALLIVE2(r+1)=allive2-dead2;
    
    %When the first node dies
    if (dead2>0 && flag_first_dead2==0)
        first_dead2=r
        flag_first_dead2=1;
    end
    
    
	countCHs2=0;
    cluster2=1;
   
    
    STATISTICS4.PACKETS_TO_BS2(r+1)=packets_TO_BS2;
    
end


figure(2);
r=0:rmax;
plot(r,STATISTICS4.ALLIVE2(r+1),'-k')
legend('improved  m=0.4,a=2');
xlabel('Rounds');
ylabel('Allive Nodes');

figure(3);
plot(r,STATISTICS4.DEAD2(r+1),'-k')
legend('improved  m=0.4,a=2');
xlabel('Rounds');
ylabel('Dead Nodes');

figure(4);
plot(r,STATISTICS4.PACKETS_TO_BS2(r+1),'-k')
legend('improved  m=0.4,a=2');
xlabel('Rounds');
ylabel('Packets to BS');